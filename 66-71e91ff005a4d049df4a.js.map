{"version":3,"file":"66-71e91ff005a4d049df4a.js","mappings":"kHACAA,EAAOC,QAAyB,iBAARC,KAAmBA,KAAKC,SAAWC,OAAOD,U,4JCDrDE,EAAM,mCAAG,WAAOC,GAAP,oFACdC,EAAM,8BAENC,EAAW,IAAIL,SAGjBG,aAAmBG,MAAQH,aAAmBI,KAChDF,EAASG,OAAO,OAAQL,GAExBE,EAASG,OACP,OACA,IAAID,KAAK,CAACE,KAAKC,UAAUP,IAAW,kBAAmB,CACrDQ,KAAM,sBAZQ,SAiBDC,MAAMR,EAAK,CAC5BS,KAAMR,EACNS,OAAQ,SAnBU,cAiBdC,EAjBc,gBAsBDA,EAAKC,OAtBJ,cAsBdA,EAtBc,yBAwBVZ,EAxBU,IAwBHY,EAAKC,SAxBF,4CAAH,sDA8BNC,EAAoB,mCAAG,WAAOf,GAAP,kFAC5BH,EAAWmB,EAAQ,OACnBf,EAAM,+BAGNgB,EAAO,IAAIpB,EAAS,CACxBqB,YAAa,YAGVb,OAAO,OAAQL,EAAS,CAC3BmB,SAAU,oBAVsB,kBAc3B,IAAIC,SAAQ,SAACC,EAASC,GAC3BL,EAAKM,OAAOtB,GAAK,SAACuB,EAAKC,GACrBA,EAAIC,YAAY,QAChBD,EAAIE,GAAG,QAAQ,SAAAC,GACb,IAAMf,EAAOP,KAAKuB,MAAMD,GAExBP,EAAWpB,EAAJ,IAAWY,EAAKC,YAGzBW,EAAIE,GAAG,SAAS,SAAAH,GACdF,EAAOE,aAxBqB,2CAAH","sources":["webpack://jaen-panoramaweg-page/./node_modules/form-data/lib/browser.js","webpack://jaen-panoramaweg-page/./node_modules/@jaenjs/jaen/src/storage.ts"],"sourcesContent":["/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;","export const upload = async (payload: object | Blob | File) => {\n  const url = 'https://osg.snek.at/storage'\n\n  const formData = new FormData()\n\n  // payload to blob\n  if (payload instanceof Blob || payload instanceof File) {\n    formData.append('file', payload)\n  } else {\n    formData.append(\n      'file',\n      new File([JSON.stringify(payload)], 'jaen-index.json', {\n        type: 'application/json'\n      })\n    )\n  }\n\n  const resp = await fetch(url, {\n    body: formData,\n    method: 'POST'\n  })\n\n  const json = await resp.json()\n\n  return `${url}/${json.file_id}`\n}\n\n/**\n * Upload function for NodeJS\n */\nexport const nodejsSafeJsonUpload = async (payload: string) => {\n  const FormData = require('form-data')\n  const url = 'https://osg.snek.at/storage'\n\n\n  const form = new FormData({\n    maxDataSize: 20971520\n  })\n\n  form.append('file', payload, {\n    filename: 'jaen-index.json'\n  })\n\n  // Here we create and await our promise:\n  return new Promise((resolve, reject) => {\n    form.submit(url, (err, res) => {\n      res.setEncoding('utf8')\n      res.on('data', chunk => {\n        const json = JSON.parse(chunk)\n\n        resolve(`${url}/${json.file_id}`)\n      })\n\n      res.on('error', err => {\n        reject(err)\n      })\n    })\n  })\n}\n"],"names":["module","exports","self","FormData","window","upload","payload","url","formData","Blob","File","append","JSON","stringify","type","fetch","body","method","resp","json","file_id","nodejsSafeJsonUpload","require","form","maxDataSize","filename","Promise","resolve","reject","submit","err","res","setEncoding","on","chunk","parse"],"sourceRoot":""}